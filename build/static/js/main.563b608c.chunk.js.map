{"version":3,"sources":["hooks/useCurrencyApi.js","containers/CalculateCurrency.js","index.js"],"names":["BASE_URL","SUPPORTED_CURRENCIES","DEFAULT_CURRENCIES","Container","styled","div","_templateObject","Wrapper","_templateObject2","BaseCurrency","_templateObject3","Button","button","_templateObject4","Dropdown","_templateObject5","props","isActive","CalculateCurrency","_useState","useState","_useState2","Object","slicedToArray","baseValue","setBaseValue","_useState3","_useState4","activeCurrencies","setActiveCurrencies","_useState5","_useState6","setIsActive","currencies","setCurrencies","useEffect","asyncToGenerator","regenerator_default","a","mark","_callee","result","stateCurrency","currencyFullName","wrap","_context","prev","next","axios","get","concat","sent","data","rates","keys","filter","currencyResult","indexOf","map","currencyIndex","currency","value","fullNameCurrency","stop","useFetchCurrencyData","NumberFormat","require","react_default","createElement","className","type","onChange","event","target","style","float","fontSize","thousandSeparator","displayType","onClick","toConsumableArray","slice","PageWrapper","src_templateObject","CalculateCurrencyWrapper","src_templateObject2","ReactDOM","render","containers_CalculateCurrency","document","querySelector"],"mappings":"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","file":"static/js/main.563b608c.chunk.js","sourcesContent":["import {useState,useEffect} from 'react';\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest?base=USD';\n\nconst SUPPORTED_CURRENCIES = [\n  'CAD',\n  'CHF',\n  'IDR',\n  'GBP',\n  'USD',\n  'SGD',\n  'INR',\n  'MYR',\n  'JPY',\n  'KRW'\n]\n\n  \nexport function useFetchCurrencyData() {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(\n    async () => {\n      const result = await axios.get(`${BASE_URL}`);\n      const stateCurrency = result.data.rates;\n      const currencyFullName = [\n      'Japan Yen', \n      'Switzerland Franc',\n      'United State Dollar',\n      'Canada Dollar',\n      'South Korean Won',\n      'Singapore Dollar',\n      'Malaysia Ringgit',\n      'Great Britain Pound',\n      'Indonesian Rupiah',\n      'India Rupee'\n    ];\n      setCurrencies(\n        Object.keys(stateCurrency)\n          .filter(currencyResult => SUPPORTED_CURRENCIES.indexOf(currencyResult) > -1)\n          .map((currencyResult, currencyIndex) => ({ currency: currencyResult, value: stateCurrency[currencyResult], fullNameCurrency: currencyFullName[currencyIndex]}))\n      );\n\n    },\n    []\n  );\n\n  return {\n    currencies,\n  }\n}","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {useFetchCurrencyData} from '../hooks/useCurrencyApi';\n\n\nconst DEFAULT_CURRENCIES = [\n  'IDR',\n  'JPY',\n  'GBP',\n];\n\nfunction CalculateCurrency() {\n  const [baseValue, setBaseValue] = useState(10);\n  const [activeCurrencies, setActiveCurrencies] = useState(DEFAULT_CURRENCIES);\n  const [isActive, setIsActive] = useState(false);\n  const { currencies } = useFetchCurrencyData();\n  const NumberFormat = require('react-number-format'); \n\n  return (  \n    <Container>\n      <BaseCurrency>\n        <div className='column1'>\n          <h1><i>USD - United State Dollars</i></h1>\n          <h1> USD </h1>\n        </div>\n        <div className='column2'>\n          <input type='text' value={baseValue} onChange={event => setBaseValue(event.target.value)}/>\n        </div>\n       </BaseCurrency>\n        {currencies.filter(currency => activeCurrencies.indexOf(currency.currency) > -1).map(currency => (\n          <Wrapper>\n            <div className='column1'> \n              <h1><NumberFormat style={{float: 'right', fontSize: '2rem'}} value={currency.value * baseValue} thousandSeparator={true} displayType={'text'}/></h1>\n              <h1> {currency.currency} </h1>\n              <h2> {currency.currency} - {currency.fullNameCurrency}</h2>\n              <h2>1 USD = {currency.currency} <NumberFormat value={currency.value} thousandSeparator={true} displayType={'text'}></NumberFormat></h2>\n            </div>\n            <div className='column2'> \n              <Button onClick={() => {\n                setActiveCurrencies([\n                  ...activeCurrencies.slice(0, activeCurrencies.indexOf(currency.currency)),\n                  ...activeCurrencies.slice(activeCurrencies.indexOf(currency.currency) + 1),\n                ]);\n              }}> (-) </Button>\n            </div>\n          </Wrapper>\n        ))}\n        <div className=\"content\">\n        <button className =\"addMoreCurrencies\" onClick={() => setIsActive(true)}> (+) Add More Currencies </button>\n          <Dropdown className=\"overlay\" isActive={isActive}>\n            {currencies.filter(currency => activeCurrencies.indexOf(currency.currency) === -1).map(currency => (\n              <button className=\"overlayItem\" onClick={() => {setActiveCurrencies([...activeCurrencies, currency.currency]); setIsActive(false)}}>{currency.currency}</button>\n            ))}\n          </Dropdown>\n        </div>\n    </Container>\n  )\n}\n\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: wrap row;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  border: 0.25rem solid #000000;\n\n  .content {\n    width: 100%;\n    display: flex;\n    flex-flow: wrap row;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    .addMoreCurrencies {\n      width: 70%;\n      display: flex;\n      flex-flow: wrap row;\n      justify-content: center;\n      align-items: center;\n      align-content: center;\n      border: 0.25rem solid #000000;\n      font-size: 2rem;\n\n      &:hover {\n        cursor: pointer;\n        background-color: #cccccc ;\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: wrap row;\n  justify-content: flex-start;\n  align-items: center;\n  align-content: center;\n  margin: 1rem 1rem 1rem 1rem;\n  border: 0.25rem solid #000000;\n  \n  .column1 {\n    width: calc(92% - 1rem)\n  }\n\n  .column2 {\n    width: calc(8% - 1rem)\n  }\n`;\n\nconst BaseCurrency = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: wrap row;\n  justify-content: flex-start;\n  align-items: center;\n  align-content: center;\n  border-bottom: 0.2rem solid #000000;\n\n  .column1 {\n    width: calc(40%-1rem);\n    margin: 0 0 0 1rem;\n  }\n\n  .column2 {\n    width: calc(60%-1rem);\n    margin: 4rem 5rem 0 3rem;\n\n    input {\n      font-size: 1.5rem;\n      width: 7rem;\n      border: 0.2rem solid #000000;\n  }\n`;\n\nconst Button = styled.button `\n  background-color: #ffffff\n  border: 0.2rem solid #000000;\n  justify-content: flex-start;\n  align-items: center;\n  align-content: center;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 2rem;\n  padding: 4.25rem 1rem 4.25rem 1rem;\n`;\n\nconst Dropdown = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: wrap row;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  margin: 0 0 0 0;\n  padding: 0 3rem 0 3rem;\n  transition: visibility 0.5s;\n  visibility: ${props => props.isActive === true ? 'visible' : 'hidden'};\n    \n  .overlayItem {\n    font-size: 2rem;\n    font-color: #000000;\n    line-height: 1rem;\n    width: 81%;\n    background: transparent;\n    display: flex;\n    flex-flow: wrap row;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    cursor: pointer;\n    margin: 0.2rem 0 0.25rem 0;\n    padding: 0.5rem 1rem;\n    border: 0.25rem solid #000000;\n    \n    &:hover {\n      background: #cccccc;\n    }\n  }\n`;\n\n\n\nexport default CalculateCurrency;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport CalculateCurrency from './containers/CalculateCurrency';\n\nconst App = () => {\n  return(\n    <PageWrapper>\n      <CalculateCurrencyWrapper>\n        <CalculateCurrency/>\n      </CalculateCurrencyWrapper>\n    </PageWrapper>\n  )\n}\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  flex-flow: wrap row;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst CalculateCurrencyWrapper = styled.div`\n  width: 60%;\n  z-index: 1000;\n`;\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}